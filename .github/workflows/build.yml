name: iOS Build, Unit Tests, and SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create AWS Config Files
        run: |
          echo "${{ secrets.AWS_CONFIG_JSON }}" > awsconfiguration.json
          echo "${{ secrets.AMPLIFY_CONFIG_JSON }}" > amplifyconfiguration.json

      - name: Install dependencies
        run: |
          sudo gem install cocoapods
          pod install

      - name: Clean Build
        run: |
          xcodebuild clean \
            -workspace PowderTrackr.xcworkspace \
            -scheme PowderTrackr

      - name: Build Project
        run: |
          xcodebuild build \
            -workspace PowderTrackr.xcworkspace \
            -scheme PowderTrackr \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
            ONLY_ACTIVE_ARCH=YES | xcpretty

      - name: Run Tests with Coverage
        run: |
          set -o pipefail && xcodebuild test \
            -workspace PowderTrackr.xcworkspace \
            -scheme PowderTrackr \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
            -testPlan PowderTrackrTests \
            -enableCodeCoverage YES \
            ONLY_ACTIVE_ARCH=YES \
            -resultBundlePath TestResults.xcresult \
            | xcpretty --report junit --output TestsResult.xml

      - name: Download xccov-to-sonarqube-generic.sh
        run: |
          curl -L -O https://raw.githubusercontent.com/SonarSource/sonar-scanning-examples/master/swift-coverage/swift-coverage-example/scripts/xccov-to-sonarqube-generic.sh
          chmod +x xccov-to-sonarqube-generic.sh

      - name: Generate Coverage Report
        run: |
          ./xccov-to-sonarqube-generic.sh TestResults.xcresult/ > coverage.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: Install SonarScanner CLI
        run: |
          brew install sonar-scanner

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.organization=kosztid \
            -Dsonar.projectKey=kosztid_PowderTrackr \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.swift.coverage.reportPaths=coverage.xml \
            -Dsonar.sources=PowderTrackr \
            -Dsonar.tests=PowderTrackrTests \
            -Dsonar.scm.exclusions.disabled=true
